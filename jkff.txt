//Design Code
module jkff(output reg q,output wire qbar,input j,k,clk,pre,clr);
  reg q1;
  always@(posedge clk)
    begin
      if(clk==1'b1)
        begin
          case({j,k})
            2'b00 : q1<=q;
            2'b01 : q1<=1'b0;
            2'b10 : q1<=1'b1;
            2'b11 : q1<=~q;
          endcase
      
        end
      else
        begin
          q1<=q;
        end
    end
  assign q=pre ? 1'b1:(clr ? 1'b0:q1);
  assign qbar=~q;
endmodule

//Test Bench Code
module test();
  reg j,k,clk;
  reg pre,clr;
  wire q,qbar;
  
  jkff DUT(q,qbar,j,k,clk,pre,clr);
  
  initial
    begin
      clk=1'b0;
      forever #5 clk=~clk;
    end
  initial
    begin
      pre=1'b0;
      clr=1'b1;
      #20;
      pre=1'b1;
      clr=1'b0;
      #10;
      pre=1'b0;
      clr=1'b0;
      #10;
      j=1'b0;k=1'b0;
      #20;
      j=1'b0;k=1'b1;
      #20;
      j=1'b1;k=1'b0;
      #20;
      j=1'b1;k=1'b1;
      #20;
      
      $finish;
      
    end
  initial
    begin
      $timeformt(-9,0,"ns",10);
      $monitor("time=%0t clk=%b j=%b k=%b pre=%b clr=%b q=%b qbar=%b",$time,clk,j,k,pre,clr,q,qbar);
    end
  initial
    begin
      $dumpfile("test.vcd");
      $dumpvars(1);
    end
  
  
endmodule
